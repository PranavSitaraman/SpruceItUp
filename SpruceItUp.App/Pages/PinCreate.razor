@using SpruceItUp.Shared.Models
@using System.Web
@using System.ComponentModel.DataAnnotations
@using System.Net.Http.Headers
@using Blazored.Modal
@using Blazored.Modal.Services
@using SpruceItUp.Shared
@using SpruceItUp.App.Pages
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavigationManager;
@inject HttpClient Http;
@inject IJSRuntime Js;
<EditForm Model="@_model" OnValidSubmit="@SubmitPin">
    <div>
        <InputText style="font-family:'Courier New';font-weight:bold" placeholder="Title..." @bind-Value="@_model.Title"/>
    </div>
    <div>
        <InputTextArea style="font-family:'Courier New';font-weight:bold" placeholder="Description..." @bind-Value="@_model.Description"/>
    </div>
    <div>
        <label style="font-family:'Courier New';font-weight:bold">Date:</label>
        <InputDate style="font-family:'Courier New';font-weight:bold" @bind-Value="_date" />
    </div>
    <div>
        <label style="font-family:'Courier New';font-weight:bold">Time:</label>
        <InputText type="time" style="font-family:'Courier New';font-weight:bold" @bind-Value="TimeProxy" />
    </div>
    <div>
        <label style="font-family:'Courier New';font-weight:bold">Expires In:</label>
        <InputSelectEnum style="font-family:'Courier New';font-weight:bold" @bind-Value="_expiresOptions"/>
    </div>
    <div>
        <label style="font-family:'Courier New';font-weight:bold">Type:</label>
        <InputSelectEnum style="font-family:'Courier New';font-weight:bold" @bind-Value="_model.Kind"/>
    </div>
    <div>
        <br />
        <label class="file-upload" style="float:left;font-family:'Courier New';font-weight:bold">Upload Image Here<InputFile OnChange="@OnFileChanged"/>
        </label>
        <button type="submit" style="float:right;font-family:'Courier New';font-weight:bold">Post</button>
        <br />
        <br />
    </div>
</EditForm>
@code
{
    private string TimeProxy
    {
        get => createdtime.ToString();
        set => TimeSpan.TryParse(value, out createdtime);
    }
    private TimeSpan createdtime = DateTime.Now.TimeOfDay;
    [Parameter] public (double, double) Position { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    private DateTime _date = DateTime.Now.Date;
    private Pin _model = new();
    private IBrowserFile _image;
    private ExpiresOptions _expiresOptions;
    private static Dictionary<ExpiresOptions, TimeSpan> ExpiresTimes = new()
    {
        [ExpiresOptions.OneDay] = TimeSpan.FromDays(1),
        [ExpiresOptions.OneWeek] = TimeSpan.FromDays(7),
        [ExpiresOptions.OneMonth] = TimeSpan.FromDays(31),
        [ExpiresOptions.OneYear] = TimeSpan.FromDays(365),
    };
    enum ExpiresOptions
    {
        [Display(Name = "1 Day")] OneDay,
        [Display(Name = "1 Week")] OneWeek,
        [Display(Name = "1 Month")] OneMonth,
        [Display(Name = "1 Year")] OneYear
    }
    public async Task OnFileChanged(InputFileChangeEventArgs e)
    {
        _image = e.File;
    }
    private async Task<string> UploadImage()
    {
        var fileContent = new StreamContent(_image.OpenReadStream(8192000));
        fileContent.Headers.ContentType = new MediaTypeHeaderValue(_image.ContentType);
        var result = await Http.PostAsync("Pin/UploadImage", fileContent);
        var fileUrl = await result.Content.ReadAsStringAsync();
        return fileUrl;
    }
    private async Task SubmitPin()
    {
        if (_image != null)
        {
            string imgUrl = await UploadImage();
            _model.Image = Http.BaseAddress +  imgUrl;
        }
        _model.Created = (_date + createdtime).ToUniversalTime();
        _model.Expires = _model.Created + ExpiresTimes[_expiresOptions];
        _model.Position = SpruceItUp.Shared.Position.FromTuple(Position);
        await Http.PostAsJsonAsync("Pin/Create", _model);
        await ModalInstance.CloseAsync(ModalResult.Ok("Submitted Successfully"));
        _model = new();
    }
}